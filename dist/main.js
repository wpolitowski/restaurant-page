(()=>{var n={497:(n,e,t)=>{"use strict";t.d(e,{Z:()=>C});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(708),t.b),d=new URL(t(230),t.b),p=new URL(t(373),t.b),l=i()(o()),u=s()(c),f=s()(d),m=s()(p);l.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --standard-padding: 16px;\n    --orange: #ffae00;\n}\n\n@font-face {\n    font-family: AmaticSC;\n    src: url("+u+");\n}\n\n@font-face {\n    font-family: Montserrat;\n    src: url("+f+");\n}\n\nbody {\n    min-height: 100vh;\n    background: url("+m+') no-repeat fixed;\n    background-size: cover;\n    /* background-attachment: fixed; */\n    font-family: Montserrat, sans-serif;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nheader {\n    position: sticky;\n    top: 0;\n    width: 100%;\n    color: #fff;\n    background-color: rgba(0, 0, 0, .8);\n    text-align: center;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, .8);\n}\n\nheader > h1 {\n    font-family: AmaticSC;\n    font-size: 5rem;\n    padding-top: var(--standard-padding);\n}\n\nheader > ul {\n    display: inline-flex;\n    list-style: none;\n    gap: 24px;\n}\n\nli {\n    position: relative;\n    cursor: pointer;\n    font-weight: bold;\n    padding: var(--standard-padding);\n    margin-top: 0;\n    transition: margin-top .2s ease-in;\n}\n\nli:hover {\n    margin-top: -6px;\n}\n\nli:hover::after {\n    display: inline-block;\n    position: absolute;\n    content: "";\n    bottom: 12px;\n    left: var(--standard-padding);\n    width: calc(100% - 2 * var(--standard-padding));\n    border-bottom: 2px solid var(--orange);\n}\n\nli:active {\n    color: var(--orange);\n}',"",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,wBAAwB;IACxB,iBAAiB;AACrB;;AAEA;IACI,qBAAqB;IACrB,4CAA2C;AAC/C;;AAEA;IACI,uBAAuB;IACvB,4CAAwC;AAC5C;;AAEA;IACI,iBAAiB;IACjB,mEAAiE;IACjE,sBAAsB;IACtB,kCAAkC;IAClC,mCAAmC;IACnC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,MAAM;IACN,WAAW;IACX,WAAW;IACX,mCAAmC;IACnC,kBAAkB;IAClB,uCAAuC;AAC3C;;AAEA;IACI,qBAAqB;IACrB,eAAe;IACf,oCAAoC;AACxC;;AAEA;IACI,oBAAoB;IACpB,gBAAgB;IAChB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,gCAAgC;IAChC,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,+CAA+C;IAC/C,sCAAsC;AAC1C;;AAEA;IACI,oBAAoB;AACxB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --standard-padding: 16px;\n    --orange: #ffae00;\n}\n\n@font-face {\n    font-family: AmaticSC;\n    src: url(../assets/fonts/AmaticSC-Bold.ttf);\n}\n\n@font-face {\n    font-family: Montserrat;\n    src: url(../assets/fonts/Montserrat.ttf);\n}\n\nbody {\n    min-height: 100vh;\n    background: url('../assets/img/background-1.jpg') no-repeat fixed;\n    background-size: cover;\n    /* background-attachment: fixed; */\n    font-family: Montserrat, sans-serif;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nheader {\n    position: sticky;\n    top: 0;\n    width: 100%;\n    color: #fff;\n    background-color: rgba(0, 0, 0, .8);\n    text-align: center;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, .8);\n}\n\nheader > h1 {\n    font-family: AmaticSC;\n    font-size: 5rem;\n    padding-top: var(--standard-padding);\n}\n\nheader > ul {\n    display: inline-flex;\n    list-style: none;\n    gap: 24px;\n}\n\nli {\n    position: relative;\n    cursor: pointer;\n    font-weight: bold;\n    padding: var(--standard-padding);\n    margin-top: 0;\n    transition: margin-top .2s ease-in;\n}\n\nli:hover {\n    margin-top: -6px;\n}\n\nli:hover::after {\n    display: inline-block;\n    position: absolute;\n    content: \"\";\n    bottom: 12px;\n    left: var(--standard-padding);\n    width: calc(100% - 2 * var(--standard-padding));\n    border-bottom: 2px solid var(--orange);\n}\n\nli:active {\n    color: var(--orange);\n}"],sourceRoot:""}]);const C=l},309:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'.container {\n    align-self: center;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.home-info {\n    padding: 2rem;\n    margin-bottom: 11rem;\n    background-color: rgba(0, 0, 0, .42);\n    color: #fff;\n    border-radius: 12px;\n    display: flex;\n    flex-direction: column;\n}\n\n.home-info > h2 {\n    font-size: 2.25rem;\n    line-height: 2;\n}\n\n.home-info > p {\n    font-size: 1.5rem;\n}\n\n.home-info > p:nth-of-type(2) {\n    font-size: .8em;\n}\n\n.menu-button {\n    align-self: center;\n    font-family: inherit;\n    font-size: 1.5rem;\n    font-weight: bold;\n    border: 2px solid var(--orange);\n    color: var(--orange);\n    border-radius: 2rem;\n    background-color: rgba(0, 0, 0, .3);\n    padding: .7rem 1.5rem;\n    margin: 2rem 0 1rem;\n    cursor: pointer;\n\n    /* animation rules */\n    position: relative;\n    z-index: 0;\n    overflow: hidden;  \n}\n\n.menu-button:hover {\n    color: #fff;\n}\n\n.menu-button::after {\n    position: absolute;\n    z-index: -1;\n    content: "";\n    display: block;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 2rem;\n    border: 2px solid var(--orange);\n    background-color: var(--orange);\n    left: 0;\n    top: 0;\n    transform: translate(-100%, 0) rotate(10deg);\n    transition: transform .2s ease-in-out, \n                opacity .2s ease-in;\n}\n\n.menu-button:hover::after {\n    transform: translate(-2px, -2px);\n    opacity: 1;\n}\n\n.menu-button.clicked::after {\n    transform: translate(100%, 0) rotate(-10deg);\n    transition: transform .15s ease-in-out;\n}',"",{version:3,sources:["webpack://./src/styles/home.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,oCAAoC;IACpC,WAAW;IACX,mBAAmB;IACnB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;IACpB,iBAAiB;IACjB,iBAAiB;IACjB,+BAA+B;IAC/B,oBAAoB;IACpB,mBAAmB;IACnB,mCAAmC;IACnC,qBAAqB;IACrB,mBAAmB;IACnB,eAAe;;IAEf,oBAAoB;IACpB,kBAAkB;IAClB,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,cAAc;IACd,UAAU;IACV,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,+BAA+B;IAC/B,+BAA+B;IAC/B,OAAO;IACP,MAAM;IACN,4CAA4C;IAC5C;mCAC+B;AACnC;;AAEA;IACI,gCAAgC;IAChC,UAAU;AACd;;AAEA;IACI,4CAA4C;IAC5C,sCAAsC;AAC1C",sourcesContent:['.container {\n    align-self: center;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.home-info {\n    padding: 2rem;\n    margin-bottom: 11rem;\n    background-color: rgba(0, 0, 0, .42);\n    color: #fff;\n    border-radius: 12px;\n    display: flex;\n    flex-direction: column;\n}\n\n.home-info > h2 {\n    font-size: 2.25rem;\n    line-height: 2;\n}\n\n.home-info > p {\n    font-size: 1.5rem;\n}\n\n.home-info > p:nth-of-type(2) {\n    font-size: .8em;\n}\n\n.menu-button {\n    align-self: center;\n    font-family: inherit;\n    font-size: 1.5rem;\n    font-weight: bold;\n    border: 2px solid var(--orange);\n    color: var(--orange);\n    border-radius: 2rem;\n    background-color: rgba(0, 0, 0, .3);\n    padding: .7rem 1.5rem;\n    margin: 2rem 0 1rem;\n    cursor: pointer;\n\n    /* animation rules */\n    position: relative;\n    z-index: 0;\n    overflow: hidden;  \n}\n\n.menu-button:hover {\n    color: #fff;\n}\n\n.menu-button::after {\n    position: absolute;\n    z-index: -1;\n    content: "";\n    display: block;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 2rem;\n    border: 2px solid var(--orange);\n    background-color: var(--orange);\n    left: 0;\n    top: 0;\n    transform: translate(-100%, 0) rotate(10deg);\n    transition: transform .2s ease-in-out, \n                opacity .2s ease-in;\n}\n\n.menu-button:hover::after {\n    transform: translate(-2px, -2px);\n    opacity: 1;\n}\n\n.menu-button.clicked::after {\n    transform: translate(100%, 0) rotate(-10deg);\n    transition: transform .15s ease-in-out;\n}'],sourceRoot:""}]);const A=i},195:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".entry-name-price,\n.menu-container h2 {\n    font-family: AmaticSC, sans-serif;\n    color: #fff;\n}\n\n.menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 4rem;\n    margin: 4rem;\n    align-items: flex-start;\n}\n\n.menu-container h2 {\n    font-size: 4rem;\n    text-align: center;\n}\n\n.savoury-container,\n.sweet-container {\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    gap: 3rem;\n    background-color: rgba(0, 0, 0, .6);\n    padding: 3rem;\n    border-radius: 1rem;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, .6);\n}\n\n.menu-entry-container > img {\n    max-width: 500px;\n    max-height: 333px;\n    /* width: auto; */\n    /* height: auto; */\n    border-radius: .5rem;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, .8);    \n}   \n\n.entry-name-price {\n    display: flex;\n    justify-content: space-between;\n    font-size: 3rem;\n}","",{version:3,sources:["webpack://./src/styles/menu.css"],names:[],mappings:"AAAA;;IAEI,iCAAiC;IACjC,WAAW;AACf;;AAEA;IACI,aAAa;IACb,eAAe;IACf,SAAS;IACT,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,SAAS;IACT,mCAAmC;IACnC,aAAa;IACb,mBAAmB;IACnB,uCAAuC;AAC3C;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,oBAAoB;IACpB,uCAAuC;AAC3C;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,eAAe;AACnB",sourcesContent:[".entry-name-price,\n.menu-container h2 {\n    font-family: AmaticSC, sans-serif;\n    color: #fff;\n}\n\n.menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 4rem;\n    margin: 4rem;\n    align-items: flex-start;\n}\n\n.menu-container h2 {\n    font-size: 4rem;\n    text-align: center;\n}\n\n.savoury-container,\n.sweet-container {\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    gap: 3rem;\n    background-color: rgba(0, 0, 0, .6);\n    padding: 3rem;\n    border-radius: 1rem;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, .6);\n}\n\n.menu-entry-container > img {\n    max-width: 500px;\n    max-height: 333px;\n    /* width: auto; */\n    /* height: auto; */\n    border-radius: .5rem;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, .8);    \n}   \n\n.entry-name-price {\n    display: flex;\n    justify-content: space-between;\n    font-size: 3rem;\n}"],sourceRoot:""}]);const A=i},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=r.base?s[0]+r.base:s[0],d=a[c]||0,p="".concat(c," ").concat(d);a[c]=d+1;var l=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var f=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=r(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},496:(n,e,t)=>{var r={"./background-1.jpg":373,"./chocolate-crêpes.jpg":22,"./guacamole-toasts.jpg":459,"./heart-tartare.jpg":380,"./mini-pancakes.jpg":64,"./pumpkin-spread.jpg":19,"./scrambled-tofu.jpg":460,"./smoothie-bowl.jpg":624};function o(n){var e=a(n);return t(e)}function a(n){if(!t.o(r,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return r[n]}o.keys=function(){return Object.keys(r)},o.resolve=a,n.exports=o,o.id=496},708:(n,e,t)=>{"use strict";n.exports=t.p+"f12c1d887cda2131ac83.ttf"},230:(n,e,t)=>{"use strict";n.exports=t.p+"3faa3eef13649db02044.ttf"},373:(n,e,t)=>{"use strict";n.exports=t.p+"6902eaad257cd3d9d936.jpg"},22:(n,e,t)=>{"use strict";n.exports=t.p+"d3896eeff2f5a0b6c579.jpg"},459:(n,e,t)=>{"use strict";n.exports=t.p+"eed97e1af55c014a050a.jpg"},380:(n,e,t)=>{"use strict";n.exports=t.p+"04e57bae9d62dd3cba7a.jpg"},64:(n,e,t)=>{"use strict";n.exports=t.p+"6c5c5f2657fe82631be9.jpg"},19:(n,e,t)=>{"use strict";n.exports=t.p+"fd6b3dc6800c0ebfb090.jpg"},460:(n,e,t)=>{"use strict";n.exports=t.p+"006b04ee5df48378430f.jpg"},624:(n,e,t)=>{"use strict";n.exports=t.p+"fb7371cb9f814efc2cff.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{"use strict";var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),s=t.n(A),c=t(216),d=t.n(c),p=t(589),l=t.n(p),u=t(497),f={};f.styleTagTransform=l(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var m=t(309),C={};C.styleTagTransform=l(),C.setAttributes=s(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=d(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var g=t(195),B={};B.styleTagTransform=l(),B.setAttributes=s(),B.insert=i().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=d(),e()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals;const I=function(n){let e={};return n.keys().forEach((t=>e[t.replace("./","").replace(".jpg","")]=n(t))),e}(t(496));function b(n,e){const t=document.createElement("div"),r=document.createElement("div"),o=document.createElement("p"),a=document.createElement("p"),i=document.createElement("img");return t.classList.add("menu-entry-container"),r.classList.add("entry-name-price"),o.textContent=function(n){let e=n.replace("-"," ");const t=e.indexOf(" ");return e=e.charAt(0).toUpperCase()+e.slice(1,t+1)+e.charAt(t+1).toUpperCase()+e.slice(t+2),e}(n),a.textContent=`€ ${e}`,i.src=I[n],r.append(o,a),t.append(i,r),t}(function(){const n=document.createElement("header"),e=document.createElement("h1"),t=document.createElement("ul"),r=document.createElement("li"),o=document.createElement("li"),a=document.createElement("li");n.classList.add("header"),e.textContent="Vegan Dream",r.textContent="Home",o.textContent="Menu",a.textContent="Contact",t.append(r,o,a),n.append(e,t),document.body.append(n)})(),function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),r=document.createElement("h2"),o=document.createElement("h2");n.classList.add("menu-container"),e.classList.add("sweet-container"),t.classList.add("savoury-container"),r.textContent="Sweet",o.textContent="Savoury",t.append(o),t.append(b("guacamole-toasts",7)),t.append(b("pumpkin-spread",5)),t.append(b("scrambled-tofu",6)),t.append(b("heart-tartare",9)),e.append(r),e.append(b("smoothie-bowl",6)),e.append(b("mini-pancakes",6)),e.append(b("chocolate-crêpes",8)),n.append(t,e),document.body.append(n)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,